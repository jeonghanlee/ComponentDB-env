#
#
INSTALL:= install
INSTALL_PROGRAM:=$(INSTALL)
INSTALL_DATA:=$(INSTALL) -m 644

# IF INSTALL_LOCATION is not WRITABLE, SUDO and SUDOBASH should be used 
# SUDO_INFO 1 : SUDO is needed (NOT writable)
# SUDO_INFO 0 : SUDO is not needed
SUDO_INFO := $(shell test -w $(CDB_INSTALL_LOCATION) 1>&2 2> /dev/null; echo $$?)
SUDO_CMD := $(shell which sudo)

# For CentOS, devtoolset-{7,8} has -E option within sudo shell
# So we have to remove -E option as well if we would like to use devtoolset
#
ifeq "$(SUDO_INFO)" "1"
SUDO = $(SUDO_CMD)
SUDOBASH := $(SUDO) -E bash -c
else
SUDO :=
SUDOBASH = bash -c
endif

#
#
# SRC_PATH_INFO 1 : the directory is not there
# SRC_PATH_INFO 0 : the directory is there
SRC_PATH_INFO := $(shell test -d $(SRC_PATH) 1>&2 2> /dev/null; echo $$?)
#
#
ifeq "$(SRC_PATH_INFO)" "1"
INIT_SRC = 1
endif
#
#
SITE_TEMPLATE_PATH:=$(TOP)/site-template

PYTHONPATH=$(CDB_PYTHON_SRC)

ANT_CDB=$(ANT_HOME)/bin/ant
## Suddenly, private/private.properties doesn't work. So I add j2ee.server.home in ant argument
## And private.properties also is generated just in case
ANT_ARGS:=-Dant.home=$(ANT_HOME)
ANT_ARGS+=-Dant.library.dir=$(ANT_HOME)/lib
ANT_ARGS+=-Dj2ee.server.home=$(PAYARA_INSTALL_PATH)/glassfish
ANT_ARGS+=-Dlibs.CopyLibs.classpath=lib/org-netbeans-modules-java-j2seproject-copylibstask.jar

### CDB 
### 
CDB_CONTEXT_ROOT=cdb
CDB_HOST_NAME=$(shell hostname -f)
CDB_CONTEXT_ROOT_PORT=8080
CDB_PORTAL_TITLE:="ALS-U Component Database Portal"
CDB_SW_VERSION=$(SRC_VERSION)-Build-$(shell date +%y%m%d%H%M)
CDB_BUG_REPORT_URL=$(SRC_URL)/$(SRC_NAME)/issues/new
CDB_SW_VERSION_URL=$(REPO_GITURL)
CDB_CODE_REPO:=$(SRC_URL)/$(SRC_NAME)
## Unclear what is this? What is webserver? I cannot connect this port at all
CDB_WEBSERVER_PORT=10232
CDB_WEBSERVICE_URL:=http://$(CDB_HOST_NAME):$(CDB_WEBSERVER_PORT)/$(CDB_CONTEXT_ROOT)
CDB_CONTEXTROOT_URL=http://$(CDB_HOST_NAME):$(CDB_CONTEXT_ROOT_PORT)/$(CDB_CONTEXT_ROOT)
CDB_ADMIN=admin
CDB_LDAP_AUTH_SERVER_URL=$(LDAP_AUTH_SERVER_URL)
CDB_LDAP_AUTH_DN_FORMAT=$(LDAP_AUTH_DN_FORMAT)
CDB_LDAP_SERVICE_DN=$(LDAP_SERVICE_DN)
CDB_LDAP_SERVICE_PASS=$(LDAP_SERVICE_PASS)
CDB_LDAP_LOOKUP_FILTER=$(LDAP_LOOKUP_FILTER)
## 
CDB_WAR_NAME:=$(CDB_CONTEXT_ROOT)
CDB_WAR_FILENAME:=$(CDB_WAR_NAME).war
##
## CDB_INSTALL_LOCATION is defined in CONFIG_SITE
CDB_DATA_DIR:=$(strip $(CDB_INSTALL_LOCATION))/data/$(CDB_CONTEXT_ROOT)
CDB_VAR_DIR:=$(strip $(CDB_INSTALL_LOCATION))/var
CDB_ETC_DIR:=$(strip $(CDB_INSTALL_LOCATION))/etc
CDB_LOG_DIR:=$(strip $(CDB_VAR_DIR))/log
CDB_RUN_DIR:=$(strip $(CDB_VAR_DIR))/run
CDB_PROPERTYVALUE_DIR:=$(strip $(CDB_DATA_DIR))/propertyValue
CDB_SSL_DIR:=$(strip $(CDB_ETC_DIR))/ssl
CDB_CA_DIR:=$(strip $(CDB_ETC_DIR))/CA
CDB_CERTS_DIR:=$(strip $(CDB_CA_DIR))/certs

CDB_BUILD_PROJECT_PROPERTIES_FILE=project.properties


CDB_JAVA_SRC:=$(SRC_PATH)/src/java/CdbWebPortal

_CDB_WEB:=$(CDB_JAVA_SRC)/web
_CDB_WEB_TEMPLATES:=$(_CDB_WEB)/templates
_CDB_WEB_RESOURCES:=$(_CDB_WEB)/resources
_CDB_WEB_WEB-INF:=$(_CDB_WEB)/WEB-INF

CDB_NBPROJECT_PATH:=$(CDB_JAVA_SRC)/nbproject
CDB_BUILD_PROPERTIES_FILE=$(CDB_NBPROJECT_PATH)/private/private.properties
CDB_GENERIC_BUILD_PROPERTIES_FILE=$(CDB_BUILD_PROPERTIES_FILE).generic.build
CDB_CONF_PERSISTENCE_XML_FILE=$(CDB_JAVA_SRC)/src/conf/persistence.xml
CDB_RESOURCE_PROPERTIES=$(CDB_JAVA_SRC)/src/java/resources.properties
CDB_PORTAL_PROPERTIES_FILE=$(CDB_JAVA_SRC)/src/java/cdb.portal.properties
CDB_GLASSFISH_WEB_XML_FILE=$(_CDB_WEB)/WEB-INF/glassfish-web.xml

CDB_PAYARA_WEB_XML=payara-web.xml

## We have to define them one by one, because before `make init` we have to define them all
##
_CDB_WEB_RESOURCES_CSS_PATH:=$(_CDB_WEB_RESOURCES)/css
CDB_WEB_RESOURCES_CSS_CATALOG:=$(_CDB_WEB_RESOURCES_CSS_PATH)/catalog.css
CDB_WEB_RESOURCES_CSS_COMPONENTINVENTORY:=$(_CDB_WEB_RESOURCES_CSS_PATH)/componentInventory.css
CDB_WEB_RESOURCES_CSS_DESIGNCATALOG:=$(_CDB_WEB_RESOURCES_CSS_PATH)/designCatalog.css
CDB_WEB_RESOURCES_CSS_DESIGNCOMPONENTINVENTORY:=$(_CDB_WEB_RESOURCES_CSS_PATH)/designComponentInventory.css
CDB_WEB_RESOURCES_CSS_INVENTORY:=$(_CDB_WEB_RESOURCES_CSS_PATH)/inventory.css
CDB_WEB_RESOURCES_CSS_JSFCRUD_1:=$(_CDB_WEB_RESOURCES_CSS_PATH)/jsfcrud_1.css
CDB_WEB_RESOURCES_CSS_LOGIN:=$(_CDB_WEB_RESOURCES_CSS_PATH)/login.css
CDB_WEB_RESOURCES_CSS_MACHINEDESIGN:=$(_CDB_WEB_RESOURCES_CSS_PATH)/machineDesign.css
CDB_WEB_RESOURCES_CSS_COMPONENTCATALOG:=$(_CDB_WEB_RESOURCES_CSS_PATH)/componentCatalog.css
CDB_WEB_RESOURCES_CSS_CONTENT:=$(_CDB_WEB_RESOURCES_CSS_PATH)/content.css
CDB_WEB_RESOURCES_CSS_DESIGNCOMPONENTCATALOG:=$(_CDB_WEB_RESOURCES_CSS_PATH)/designComponentCatalog.css
CDB_WEB_RESOURCES_CSS_DESIGNINVENTORY:=$(_CDB_WEB_RESOURCES_CSS_PATH)/designInventory.css
CDB_WEB_RESOURCES_CSS_ITMES:=$(_CDB_WEB_RESOURCES_CSS_PATH)/items.css
CDB_WEB_RESOURCES_CSS_JSFCRUD:=$(_CDB_WEB_RESOURCES_CSS_PATH)/jsfcrud.css
CDB_WEB_RESOURCES_CSS_MAARC:=$(_CDB_WEB_RESOURCES_CSS_PATH)/maarc.css
CDB_WEB_RESOURCES_CSS_PORTAL:=$(_CDB_WEB_RESOURCES_CSS_PATH)/portal.css

CDB_WEB_RESOURCES_CSS_FILES:=$(foreach v, $(filter CDB_WEB_RESOURCES_CSS_%, $(.VARIABLES)), $($(v)))
CDB_WEB_LBNL_FONTS:="@import url('https://fonts.googleapis.com/css2?family=Open+Sans:ital,wght@0,300;0,400;0,600;0,700;0,800;1,300;1,400;1,600;1,700;1,800&display=swap');"

CDB_WEB_RESOURCES_GRAYCOLOR_DEFAULT:=\#f2f4f7
CDB_WEB_RESOURCES_GRAYCOLOR_97:=\#F7F7F7
CDB_WEB_RESOURCES_MAIN_COLOR_DEFAULT:=\#6da5d8
## Berkeley Lab Brand Guidelines OVERVIEW
## Light Gray
CDB_WEB_RESOURCES_GRAYCOLOR_BERKELEY:=\#B1B3B3
## DARK BLUE
CDB_WEB_RESOURCES_MAIN_COLOR_BERKELEY:=\#00313C
#CDB_WEB_TEMPLATE_XHTML_PORTALVIEW:=$(_CDB_WEB_TEMPLATES)/portalViewTemplate.xhtml
#CDB_WEB_TEMPLATE_XHTML_LOGINVIEW:=$(_CDB_WEB_TEMPLATES)/loginViewTemplate.xhtml
#CDB_WEB_TEMPLATE_XHTML_ERRORVIEW:=$(_CDB_WEB_TEMPLATES)/errorViewTemplate.xhtml
CDB_WEB_RESOURCES_ALS_IMAGES:=$(wildcard $(SITE_TEMPLATE_PATH)/images/*)
CDB_WEB_RESOURCES_IMAGES_PATH:=$(_CDB_WEB_RESOURCES)/images

#
#
VARS_EXCLUDES+=SRC_PATH_INFO
VARS_EXCLUDES+=INSTALL
VARS_EXCLUDES+=INSTALL_PROGRAM
VARS_EXCLUDES+=INSTALL_DATA
VARS_EXCLUDES+=SUDOBASH

