#-*- mode: Makefile;-*-
.DEFAULT_GOAL := vars

.PHONY: default init distclean deinit


## Clone Source
init:
ifeq "$(INIT_SRC)" "1"
	git clone $(SRC_GITURL) $(SRC_PATH)
	cd $(SRC_PATH) && git checkout $(SRC_TAG)
else
	$(QUIET)echo "$(SRC_PATH) exists. make distclean first, if one would like to restart it."
endif

deinit: distclean
## Clean Source
distclean:
ifneq ($(wildcard $(SRC_PATH)/.*),)
	$(QUIET)echo "We've found $(SRC_PATH)"
	$(QUIET)echo "Removing ....."
	$(QUIET)rm -rf $(SRC_PATH)
else
	$(QUIET)echo "There is no $(SRC_PATH)."
endif

.PHONY: build build.java build.python clean clean.java

build: build.java build.python

clean: clean.java

.PHONY: conf.cdb dist.ant revertconf.cdb

build.java: conf.cdb dist.ant

clean.java: clean.conf.cdb clean.ant  revertconf.cdb

.PHONY: info.ant dist.ant clean.ant library-inclusion-in-archive.ant compile.ant

info.ant:
	$(QUIET)echo "-------------------------------------------------------------"
	$(QUIET)echo ">>> Ant  information"
	$(QUIET)echo "Ant : $(ANT_CDB)"
	$(QUIET)$(ANT_CDB) -version
	$(QUIET)echo "-------------------------------------------------------------"
	$(QUIET)echo ">>> JAVA information"
	$(QUIET)echo "JAVA : $(JAVA_PATH)/java"
	$(QUIET)$(JAVA_PATH)/java -version
	$(QUIET)echo "-------------------------------------------------------------"

# OpenJDK11 : jakarta.xml.bind.api for error: package javax.xml.bind does not exist
dist.ant: info.ant install.jars
	$(ANT_CDB) -f $(CDB_JAVA_SRC)/build.xml $(ANT_ARGS) dist

clean.ant: info.ant
	$(ANT_CDB) -f $(CDB_JAVA_SRC)/build.xml $(ANT_ARGS) clean

library-inclusion-in-archive.ant: info.ant
	$(ANT_CDB) -f $(CDB_JAVA_SRC)/build.xml $(ANT_ARGS) library-inclusion-in-archive

compile.ant: info.ant
	$(ANT_CDB) -f $(CDB_JAVA_SRC)/build.xml $(ANT_ARGS) compile

.PHONY: conf.cdb conf.install conf.update_plugin conf.properties_file conf.web.xml conf.cdb_portal_properties_file conf.persistence.xml conf.resources.properties

conf.cdb: conf.install conf.update_plugin conf.build_properties_file conf.web.xml conf.cdb_portal_properties_file conf.persistence.xml conf.resources.properties conf.css.web

conf.install: src_install

conf.update_plugin:
	$(SUDO) CDB_INSTALL_DIR=$(CDB_INSTALL_LOCATION) CDB_ROOT_DIR=$(SRC_PATH) PYTHONPATH=$(PYTHONPATH)  python $(SRC_PATH)/tools/developer_tools/cdb_plugins/update_plugin_generated_files.py $(DB_NAME) 0

conf.build_properties_file: conf.project_properties
	$(QUIET)cp -rf $(SITE_TEMPLATE_PATH)/build/* $(CDB_NBPROJECT_PATH)/
ifneq ("$(wildcard $(CDB_BUILD_PROPERTIES_FILE))","")
	$(QUIET)echo ">>> Found $(CDB_BUILD_PROPERTIES_FILE), renamed it to $(CDB_BUILD_PROPERTIES_FILE).orig"
	$(QUIET)mv $(CDB_BUILD_PROPERTIES_FILE) $(CDB_BUILD_PROPERTIES_FILE).orig
endif
	$(QUIET)sed -e "s:CDB_GLASSFISH_DIR:$(PAYARA_INSTALL_PATH):g" < $(CDB_GENERIC_BUILD_PROPERTIES_FILE) > $(CDB_BUILD_PROPERTIES_FILE)

.PHONY: conf.project_properties conf.project_properties.show

conf.project_properties: $(CDB_BUILD_PROJECT_PROPERTIES_FILE).in
	$(QUIET) echo ">>> Generate $(basename $<) from $<"
	$(QUIET)sed -e "s:@CDB_WAR_FILENAME@:$(CDB_WAR_FILENAME):g" \
			< $< > $(basename $<)

conf.project_properties.show: $(CDB_BUILD_PROJECT_PROPERTIES_FILE).in
	@cat -b $(basename $<)

## context-root is the relative path
## we have to add "/" before CDB_CONTEXT_ROOT
conf.web.xml:
	$(QUIET)echo ">>> Copying web.xml to $(_CDB_WEB_WEB-INF)/ "
	$(QUIET)cp -rf $(SITE_TEMPLATE_PATH)/web/web.xml $(_CDB_WEB_WEB-INF)/
	$(QUIET)echo ">>> Generate $(CDB_GLASSFISH_WEB_XML_FILE)"
	$(QUIET)sed -e "s:CDB_DATA_DIR:$(CDB_DATA_DIR):g" \
				-e "s:<context-root.*:<context-root>/$(CDB_CONTEXT_ROOT)</context-root>:g" \
				< $(CDB_GLASSFISH_WEB_XML_FILE).template > $(CDB_GLASSFISH_WEB_XML_FILE)

## Few variables in cdb.portal.properties used in 
## src/java/CdbWebPortal/src/java/gov/anl/aps/cdb/common/constants/CdbProperty.java
##  WEB_SERVICE_URL_PROPERTY_NAME = "cdb.webService.url";
##  PERMANENT_CONTEXT_ROOT_URL_PROPERTY_NAME = "cdb.permanentContextRoot.url";
##  STORAGE_DIRECTORY_PROPERTY_NAME = "cdb.portal.storageDirectory";
##  SCALED_IMAGE_SIZE_PROPERTY_NAME = "cdb.portal.scaledImageSize";
##  THUMBNAIL_IMAGE_PROPERTY_NAME = "cdb.portal.thumbnailImageSize";
##  HTTP_LINK_DISPLAY_LENGTH_PROPERTY_NAME = "cdb.portal.handler.http.linkDisplayLength";   
## src/java/CdbWebPortal/src/java/gov/anl/aps/cdb/portal/controllers/LoginController.java
## src/java/CdbWebPortal/src/java/gov/anl/aps/cdb/portal/model/db/utilities/EntityInfoUtility.java
##  AdminGroupListPropertyName = "cdb.portal.adminGroupList";
## CDB_ADMIN is not the variable, but the HARD-coded important definition
## That is used for the MariaDB Table definition.
conf.cdb_portal_properties_file:
	$(QUIET)echo ">>> Generate $(CDB_PORTAL_PROPERTIES_FILE)"
	$(QUIET)sed -e "s:CDB_DATA_DIR:$(CDB_DATA_DIR):g" \
				-e "s|cdb.webService.url=.*|cdb.webService.url=$(CDB_WEBSERVICE_URL)|g" \
				-e "s|cdb.permanentContextRoot.url=.*|cdb.permanentContextRoot.url=$(CDB_CONTEXTROOT_URL)|g" \
				-e "s|CDB_LDAP_AUTH_SERVER_URL|$(CDB_LDAP_AUTH_SERVER_URL)|"g \
				-e "s:CDB_LDAP_AUTH_DN_FORMAT:$(CDB_LDAP_AUTH_DN_FORMAT):"g \
				-e "s:CDB_LDAP_SERVICE_DN:$(CDB_LDAP_SERVICE_DN):g" \
				-e "s:CDB_LDAP_SERVICE_PASS:$(CDB_LDAP_SERVICE_PASS):g" \
				-e "s:CDB_LDAP_LOOKUP_FILTER:\'$(CDB_LDAP_LOOKUP_FILTER)\':g" \
				< $(CDB_PORTAL_PROPERTIES_FILE).template > $(CDB_PORTAL_PROPERTIES_FILE)

conf.persistence.xml:
	$(QUIET)echo ">>> Generate $(CDB_CONF_PERSISTENCE_XML_FILE)"
	$(QUIET)sed -i \
				-e "s:<jta-data-source.*:<jta-data-source>$(JDBC_JNID_NAME)</jta-data-source>:g" \
				$(CDB_CONF_PERSISTENCE_XML_FILE)


conf.resources.properties:
	$(QUIET)echo ">>> Generate $(CDB_RESOURCE_PROPERTIES)"
	$(QUIET)sed -i \
				-e "s|CdbPortalTitle=.*|CdbPortalTitle="$(CDB_PORTAL_TITLE)"|g" \
				-e "s|CdbSoftwareVersion=.*|CdbSoftwareVersion=${CDB_SW_VERSION}|g" \
				-e "s|CdbSoftwareVersionUrl=.*|CdbSoftwareVersionUrl=$(CDB_SW_VERSION_URL)|g" \
				-e "s|CdbBugReportUrl=.*|CdbBugReportUrl=$(CDB_BUG_REPORT_URL)|g" \
				-e "s|CdbCodeRepository=.*|CdbCodeRepository=$(CDB_CODE_REPO)|g" \
				-e "s|CdbCopyrightNotice=.*|CdbCopyrightNotice=2014-2020 UChicago Argonne, LLC and 2020 Lawrence Berkeley National Laboratory|g" \
				$(CDB_RESOURCE_PROPERTIES)



.PHONY: conf.css.web conf.css.portal conf.css.changecolor $(CDB_WEB_RESOURCES_CSS_FILES) conf.copy.images conf.update.images  conf.system.accout.update

conf.css.web: conf.css.portal conf.css.changecolor conf.copy.images conf.update.images conf.system.accout.update

conf.css.portal:
	$(QUIET)echo ">>> Update $(CDB_WEB_RESOURCES_CSS_PORTAL)"
	$(QUIET)cp -rf $(SITE_TEMPLATE_PATH)/css/portal.css $(_CDB_WEB_RESOURCES_CSS_PATH)/
#	$(QUIET)sed -i -e "/^\@import url.*/d" $(CDB_WEB_RESOURCES_CSS_PORTAL)
#	$(QUIET)sed -i \
#				-e "/^html, body.*/i "$(CDB_WEB_LBNL_FONTS)"\n" \
#				 $(CDB_WEB_RESOURCES_CSS_PORTAL)
#	$(QUIET)sed -i \
#				-e "s|font-family:|font-family: 'Open Sans', sans-serif,|g" \
#				-e "s|text-wrap|word-wrap|g" \
#				 $(CDB_WEB_RESOURCES_CSS_PORTAL)
	$(QUIET)echo ">>> Update $(CDB_WEB_RESOURCES_CSS_JSFCRUD_1)"	
	$(QUIET)sed -i \
				-e "s|font-family:|font-family: 'Open Sans', sans-serif,|g" \
				 $(CDB_WEB_RESOURCES_CSS_JSFCRUD_1)
	$(QUIET)echo ">>> Update $(CDB_WEB_RESOURCES_CSS_JSFCRUD)"				
	$(QUIET)sed -i \
				-e "s|font-family:|font-family: 'Open Sans', sans-serif,|g" \
				 $(CDB_WEB_RESOURCES_CSS_JSFCRUD)


conf.css.changecolor: $(CDB_WEB_RESOURCES_CSS_FILES)

$(CDB_WEB_RESOURCES_CSS_FILES):
	$(QUIET)echo  ">>> Change all $(CDB_WEB_RESOURCES_GRAYCOLOR_DEFAULT) color to $(CDB_WEB_RESOURCES_GRAYCOLOR_97) at $(@)"
	$(QUIET)sed -i \
				-e "s@$(CDB_WEB_RESOURCES_GRAYCOLOR_DEFAULT)@$(CDB_WEB_RESOURCES_GRAYCOLOR_97)@g" \
				$(@)


conf.copy.images:
	$(QUIET)cp -rf $(CDB_WEB_RESOURCES_ALS_IMAGES) $(CDB_WEB_RESOURCES_IMAGES_PATH)/

conf.update.images:
	$(QUIET)grep -Ril "anl.ico" $(_CDB_WEB) | xargs -i@ sed -i "s/anl.ico/als.ico/g" @
#	$(QUIET)grep -r "als.ico" $(_CDB_WEG)
	$(QUIET)grep -Ril "ApsStorageRing.png" $(_CDB_WEB) | xargs -i@ sed -i "s/ApsStorageRing.png/dome.png/g" @
#	$(QUIET)grep -r "dome.png" $(_CDB_WEG)
	$(QUIET)grep -Ril "AnlLogo167x75.png" $(_CDB_WEB) | xargs -i@ sed -i "s/AnlLogo167x75.png/LBNLLogo.png/g" @
#	$(QUIET)grep -r "LBNLLogo.png" $(_CDB_WEG)
	$(QUIET)grep -Ril "background-size: 20" $(_CDB_WEB) | xargs -i@ sed -i "s/ackground-size: 20/ackground-size: 100/g" @


conf.system.accout.update:
	$(QUIET)echo ">>> Replace the hard-coded user name cdb with what we define $(SQL_SYSTEM_ACCOUNT_USER)."
	$(QUIET)echo "    at $(CDB_PORTAL_CONTROLLERS_LOGCONTROLLER_JAVA)."
	$(QUIET)sed -i \
		-e "s|private final String DEFAULT_SYSTEM_ADMIN_USERNAME =.*|private final String DEFAULT_SYSTEM_ADMIN_USERNAME = \"$(SQL_SYSTEM_ACCOUNT_USER)\";|g" \
		$(CDB_PORTAL_CONTROLLERS_LOGCONTROLLER_JAVA)
	$(QUIET)grep -r "$(SQL_SYSTEM_ACCOUNT_USER)" $(CDB_PORTAL_CONTROLLERS_LOGCONTROLLER_JAVA)


.PHONY: revertconf.cdb conf.cdb.view clean.conf.cdb

revertconf.cdb:
ifneq ("$(wildcard $(CDB_BUILD_PROPERTIES_FILE).orig)","")
	$(QUIET)echo ">>> Revert $(CDB_BUILD_PROPERTIES_FILE).orig to the original one $(CDB_BUILD_PROPERTIES_FILE)"
	$(QUIET)mv $(CDB_BUILD_PROPERTIES_FILE).orig $(CDB_BUILD_PROPERTIES_FILE)
endif
ifneq ("$(wildcard $(CDB_CONF_PERSISTENCE_XML_FILE).orig)","")
	$(QUIET)echo ">>> Revert $(CDB_CONF_PERSISTENCE_XML_FILE).orig to the original - source version -one $(CDB_CONF_PERSISTENCE_XML_FILE)"
	$(QUIET)mv $(CDB_CONF_PERSISTENCE_XML_FILE).orig $(CDB_CONF_PERSISTENCE_XML_FILE)
endif

conf.update_plugin.view:
	-ls -ltar $(CDB_JAVA_SRC)/web/views/plugins/private
	-ls -ltar $(CDB_JAVA_SRC)/src/java/gov/anl/aps/cdb/portal/plugins/support
	-ls -ltar $(SRC_PATH)/src/python/cdb/cdb_web_service/plugins

clean.conf.update_plugin:
	rm -rf $(CDB_JAVA_SRC)/web/views/plugins/private
	rm -rf $(CDB_JAVA_SRC)/src/java/gov/anl/aps/cdb/portal/plugins/support
	rm -rf $(SRC_PATH)/src/python/cdb/cdb_web_service/plugins

build.python:
	$(QUIET)echo "\n>>> This rule is empty, what do we want to do???"
	PYTHONPATH=$(PYTHONPATH) make -C $(SRC_PATH)/src/python dist

.PHONY: redeploy.cdb undeploy.cdb deploy.cdb clean.local

redeploy.cdb: undeploy.cdb deploy.cdb 

deploy.cdb:
	$(QUIET)$(PAYARA_ASADMIN) deploy $(CDB_JAVA_SRC)/dist/$(CDB_WAR_FILENAME)

undeploy.cdb:
	$(QUIET)$(PAYARA_ASADMIN) undeploy $(CDB_WAR_NAME)

list.cdb:
	$(QUIET)$(PAYARA_ASADMIN) list-applications
#
clean.local:
	@-rm -f $(TOP)/*.local
	@-rm -f $(TOP)/configure/*.local
	@-rm -f $(TOP)/*.jar


VARS_EXCLUDES+=$(filter CDB_WEB_RESOURCES_%, $(.VARIABLES))
