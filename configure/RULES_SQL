.PHONY: db.conf db.init db.create db.drop db.show

db.conf:
	$(call checkfile, "$(SITE_TEMPLATE_PATH)/$(SQL_CONFIG_FILE)")
	$(QUIET) echo ">>> Generate $(SITE_TEMPLATE_PATH)/$(SQL_CONFIG_FILE)"
	$(QUIET)sed -e "s:@DB_ADMIN_HOSTS@:$(DB_ADMIN_HOSTS):g" \
		    -e "s:@DB_ADMIN@:$(DB_ADMIN):g" \
			-e "s:@DB_ADMIN_PASS@:$(DB_ADMIN_PASS):g" \
			-e "s:@DB_CHAR_SET@:$(DB_CHAR_SET):g" \
			-e "s:@DB_HOST@:$(DB_HOST):g" \
			-e "s:@DB_HOST_NAME@:$(DB_HOST_NAME):g" \
			-e "s:@DB_HOST_IPADDR@:$(DB_HOST_IPADDR):g" \
			-e "s:@DB_NAME@:$(DB_NAME):g" \
			-e "s:@DB_HOST_PORT@:$(DB_HOST_PORT):g" \
			-e "s:@DB_USER@:$(DB_USER):g" \
			-e "s:@DB_USER_PASS@:$(DB_USER_PASS):g" \
		    < $(SITE_TEMPLATE_PATH)/$(SQL_CONFIG_FILE).in > $(SITE_TEMPLATE_PATH)/$(SQL_CONFIG_FILE)

db.init: db.conf
	$(QUIET)bash scripts/mariadb_setup.bash secureSetup
	$(QUIET)bash scripts/mariadb_setup.bash adminAdd

db.create:
	$(QUIET)bash scripts/mariadb_setup.bash dbCreate

db.drop:
	$(QUIET)bash scripts/mariadb_setup.bash dbDrop

db.show:
	$(QUIET)bash scripts/mariadb_setup.bash dbShow


.PHONY: cdb.create cdb.drop cdb.show

cdb.create: sql.Fill sql.triggersFill

cdb.drop: sql.triggersDrop sql.Drop

cdb.show: sql.triggersShow sql.Show

cdb.admin:
	bash scripts/mariadb_setup.bash userLocalPassword "cdb" "cdb" "$(PYTHONPATH)"

cdb.getadminpass:
	$(QUIET)bash scripts/mariadb_setup.bash showAdminCryptPassword "123456" "$(PYTHONPATH)"


.PHONY: sql.conf sql.top.conf sql.staticpath.conf sql.cleanpath.conf sql.site.conf sql.conf.clean

sql.conf.clean:
	-rm -f $(TEMP_ALL_SQL) $(TEMP_TOP_SQL) $(TEMP_STATICPATH_SQL) $(TEMP_CLEANPATH_SQL) $(TEMP_SITE_SQL)

sql.conf: sql.top.conf sql.staticpath.conf sql.cleanpath.conf sql.site.conf
	$(QUIET)cat $(SQL_TOP_FILES) $(SQL_STATICPATH_FILES) $(SQL_CLEANPATH_FILES) $(SQL_SITE_FILES) > $(TEMP_ALL_SQL)

sql.top.conf:
	$(QUIET)cat $(SQL_TOP_FILES)        > $(TEMP_TOP_SQL)

sql.staticpath.conf:
	$(QUIET)cat $(SQL_STATICPATH_FILES) > $(TEMP_STATICPATH_SQL)

sql.cleanpath.conf:
	$(QUIET)cat $(SQL_CLEANPATH_FILES)  > $(TEMP_CLEANPATH_SQL)

sql.site.conf:
	$(QUIET)cat $(SQL_SITE_FILES)       > $(TEMP_SITE_SQL)

.PHONY: sql.Fill sql.topFill sql.staticpathFill sql.cleanpathFill sql.siteFill

# Combine all queries into one single query.
sql.Fill: sql.conf sql.update
	$(QUIET)bash scripts/mariadb_setup.bash tableCreate "$(TEMP_ALL_SQL)"

sql.topFill: sql.top.conf
	$(QUIET)bash scripts/mariadb_setup.bash tableCreate "$(TEMP_TOP_SQL)"

sql.staticpathFill: sql.staticpath.conf
	$(QUIET)bash scripts/mariadb_setup.bash tableCreate "$(TEMP_STATICPATH_SQL)"

sql.cleanpathFill: sql.cleanpath.conf sql.update
	$(QUIET)bash scripts/mariadb_setup.bash tableCreate "$(TEMP_CLEANPATH_SQL)"

sql.siteFill: sql.site.conf
	$(QUIET)bash scripts/mariadb_setup.bash tableCreate "$(TEMP_SITE_SQL)"


.PHONY: sql.triggersFill sql.triggersDrop sql.triggersShow  sql.Show sql.Drop sql.update

sql.triggersFill:
	$(QUIET)bash scripts/mariadb_setup.bash triggersCreate

sql.triggersDrop:
	$(QUIET)bash scripts/mariadb_setup.bash triggersDrop

sql.triggersShow:
	$(QUIET)bash scripts/mariadb_setup.bash triggersShow

sql.Show:
	$(QUIET)bash scripts/mariadb_setup.bash allShow

sql.Drop:
	$(QUIET)bash scripts/mariadb_setup.bash allDrop


## This replace the default aps email to SQL_SYSTEM_ACCOUNT.
## Have to setup that account according to its purpose.
sql.update:
	$(QUIET)sed -i -e "s|cdb@aps.anl.gov|$(SQL_SYSTEM_ACCOUNT)|g" $(TEMP_ALL_SQL)
	$(QUIET)sed -i -e "s|cdb@aps.anl.gov|$(SQL_SYSTEM_ACCOUNT)|g" $(TEMP_CLEANPATH_SQL)



.PHONY: jdbc.conf jdbc.conf.show jdbc.install jdbc.ping jdbc.list jdbc.flush

jdbc.conf: 
ifneq ("$(wildcard $(SITE_TEMPLATE_PATH)/$(JDBC_PAYARA_MARIADB_XML))","")
	$(QUIET) echo ">>> Found the exist file $(JDBC_PAYARA_MARIADB_XML) at $(SITE_TEMPLATE_PATH)"
	$(QUIET) echo "    Remove it."
	-rm -f $(SITE_TEMPLATE_PATH)/$(JDBC_PAYARA_MARIADB_XML)
endif
	$(QUIET) echo ">>> Generate $(JDBC_PAYARA_MARIADB_XML) at $(SITE_TEMPLATE_PATH)"
	$(QUIET)sed -e "s:@JDBC_DATASOURCE_CLASSNAME@:$(JDBC_DATASOURCE_CLASSNAME):g" \
		    -e "s:@JDBC_RES_TYPE@:$(JDBC_RES_TYPE):g" \
			-e "s:@JDBC_DB_USER@:$(JDBC_DB_USER):g" \
			-e "s:@JDBC_DB_USER_PASS@:$(JDBC_DB_USER_PASS):g" \
			-e "s:@JDBC_DB_TYPE@:$(JDBC_DB_TYPE):g" \
			-e "s:@JDBC_DB_HOSTNAME@:$(JDBC_DB_HOSTNAME):g" \
			-e "s:@JDBC_DB_PORTNUM@:$(JDBC_DB_PORTNUM):g" \
			-e "s:@JDBC_DB_NAME@:$(JDBC_DB_NAME):g" \
			-e "s:@JDBC_DB_CONNECTION_POOLNAME@:$(JDBC_DB_CONNECTION_POOLNAME):g" \
			-e "s:@JDBC_JNID_NAME@:$(JDBC_JNID_NAME):g" \
		    < $(SITE_TEMPLATE_PATH)/$(JDBC_PAYARA_MARIADB_XML).in > $(SITE_TEMPLATE_PATH)/$(JDBC_PAYARA_MARIADB_XML)

jdbc.conf.show:
	$(QUIET) cat -b $(SITE_TEMPLATE_PATH)/$(JDBC_PAYARA_MARIADB_XML)

jdbc.install: jdbc.conf
	$(PAYARA_ASADMIN) add-resources $(SITE_TEMPLATE_PATH)/$(JDBC_PAYARA_MARIADB_XML)

jdbc.ping:
	$(PAYARA_ASADMIN) ping-connection-pool $(JDBC_DB_CONNECTION_POOLNAME)

jdbc.list:
	$(PAYARA_ASADMIN) list-jdbc-connection-pools $(JDBC_DB_CONNECTION_POOLNAME)

jdbc.flush:
	$(PAYARA_ASADMIN) flush-connection-pool $(JDBC_DB_CONNECTION_POOLNAME)

.PHONY: jdbc.uninstall jdbc.resource.rm jdbc.pool.rm

jdbc.uninstall: jdbc.resource.rm jdbc.pool.rm

jdbc.resource.rm:
	$(PAYARA_ASADMIN) delete-jdbc-resource $(JDBC_JNID_NAME)

jdbc.pool.rm: 
	$(PAYARA_ASADMIN) delete-jdbc-connection-pool $(JDBC_DB_CONNECTION_POOLNAME)

domain.start:
	$(PAYARA_ASADMIN) start-domain $(PAYARA_DOMAIN)

domain.stop:
	$(PAYARA_ASADMIN) stop-domain $(PAYARA_DOMAIN)

domain.restart:
	$(PAYARA_ASADMIN) restart-domain $(PAYARA_DOMAIN)
